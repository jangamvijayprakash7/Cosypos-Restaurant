generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(cuid())
  email         String         @unique
  passwordHash  String
  role          Role
  name          String
  phone         String?
  profileImage  String?
  permissions   String?        @default("{\"dashboard\":true,\"menu\":true,\"orders\":true,\"reservation\":true,\"staff\":false,\"inventory\":false,\"reports\":false}")
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  age           Int?
  salary        Int?        // in cents
  timings       String?
  attendance    Attendance[]
  notifications Notification[]
  orders        Order[]
  reservations  Reservation[]

  @@index([role])
  @@index([email])
  @@index([createdAt])
}

model MenuCategory {
  id        String     @id @default(cuid())
  name      String     @unique
  image     String?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  items     MenuItem[]
}

model MenuItem {
  id          String       @id @default(cuid())
  name        String
  description String?
  priceCents  Int
  available   Boolean      @default(true)
  stock       Int          @default(0)
  image       String?
  categoryId  String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  category    MenuCategory @relation(fields: [categoryId], references: [id])
  orderItems  OrderItem[]

  @@index([categoryId])
  @@index([available])
  @@index([name])
  @@index([createdAt])
}

model InventoryItem {
  id        String   @id @default(cuid())
  name      String
  sku       String?  @unique
  quantity  Float    @default(0)
  unit      String
  parLevel  Float?
  costCents Int?
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

model Table {
  id           String        @id @default(cuid())
  label        String        @unique
  capacity     Int
  status       TableStatus   @default(AVAILABLE)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  orders       Order[]
  reservations Reservation[]
}

model Order {
  id         String      @id @default(cuid())
  status     OrderStatus @default(PENDING)
  userId     String?
  tableId    String?
  totalCents Int         @default(0)
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  table      Table?      @relation(fields: [tableId], references: [id])
  user       User?       @relation(fields: [userId], references: [id])
  items      OrderItem[]
  payments   Payment[]

  @@index([status])
  @@index([userId])
  @@index([tableId])
  @@index([createdAt])
}

model OrderItem {
  id         String   @id @default(cuid())
  orderId    String
  menuItemId String
  qty        Int
  priceCents Int
  menuItem   MenuItem @relation(fields: [menuItemId], references: [id])
  order      Order    @relation(fields: [orderId], references: [id])
}

model Reservation {
  id              String            @id @default(cuid())
  customerId      String
  tableId         String?
  tableNumber     String
  floor           Int
  paxNumber       Int
  reservationDate DateTime
  startTime       String
  endTime         String
  depositFee      Float             @default(0)
  status          ReservationStatus @default(PENDING)
  paymentMethod   String            @default("CASH")
  specialRequests String?
  customerTitle   String            @default("Mr")
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  customer        User              @relation(fields: [customerId], references: [id])
  table           Table?            @relation(fields: [tableId], references: [id])

  @@index([customerId])
  @@index([tableId])
  @@index([reservationDate])
  @@index([status])
  @@index([floor])
}

model Attendance {
  id        String           @id @default(cuid())
  userId    String
  clockIn   DateTime?
  clockOut  DateTime?
  breaksMin Int              @default(0)
  createdAt DateTime         @default(now())
  date      DateTime         @default(now()) @db.Date
  status    AttendanceStatus @default(PRESENT)
  user      User             @relation(fields: [userId], references: [id])

  @@index([userId])
  @@index([date])
}

model Payment {
  id          String   @id @default(cuid())
  orderId     String
  method      String
  amountCents Int
  status      String
  createdAt   DateTime @default(now())
  order       Order    @relation(fields: [orderId], references: [id])
}

model Notification {
  id        String   @id @default(cuid())
  userId    String?
  channel   String
  message   String
  read      Boolean  @default(false)
  createdAt DateTime @default(now())
  user      User?    @relation(fields: [userId], references: [id])
}

enum Role {
  ADMIN
  STAFF
  USER
}

enum TableStatus {
  AVAILABLE
  OCCUPIED
  RESERVED
}

enum OrderStatus {
  PENDING
  IN_PROGRESS
  SERVED
  PAID
  CANCELLED
}

enum ReservationStatus {
  PENDING
  CONFIRMED
  CANCELLED
  NO_SHOW
  COMPLETED
}

enum AttendanceStatus {
  PRESENT
  ABSENT
  HALF_SHIFT
  LEAVE
}
